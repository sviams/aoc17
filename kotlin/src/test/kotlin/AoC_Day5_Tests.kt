import org.jetbrains.spek.api.Spek
import org.jetbrains.spek.api.dsl.given
import org.jetbrains.spek.api.dsl.it
import kotlin.test.assertEquals

class AoC_Day5_Tests : Spek({

    val task = listOf(0,1,1,-2,-2,-2,-2,-4,2,0,-9,1,-5,-12,-9,-10,-7,-7,-2,-10,-2,0,-6,-14,-6,-24,-10,0,-4,1,1,-30,-31,-24,0,-20,-24,-10,-2,0,-28,-8,-3,-23,-6,2,-41,-36,-2,-11,-39,-27,-21,-48,-38,-4,-29,-49,-9,-57,-33,-60,-42,-12,-21,-19,-21,-52,-65,-62,-26,-64,-67,-12,-22,-21,-30,-31,-20,-54,-57,-20,-18,-46,-1,1,-76,-25,-80,-60,-80,-36,-30,-85,-21,-89,-62,-66,-4,-39,-64,-39,-88,-17,-5,-69,-90,-14,-2,-13,-76,1,-10,-10,-28,0,-96,-16,-33,-90,-56,-25,-9,-4,-110,-54,-72,-92,-127,-112,-38,-17,-114,-82,-35,-51,-41,-3,-14,-69,-102,-72,-6,-118,-80,-111,-96,-45,-43,-19,-37,-24,-75,-75,-115,-54,-52,-19,-123,-151,-122,-96,-20,-46,-67,-128,-123,-9,-43,-34,-160,-111,2,-164,-158,-63,-67,-2,-145,-103,-80,-53,-148,-103,-47,0,-178,-147,-57,-152,-46,-173,-119,-184,-69,-113,-112,-51,-33,-187,-172,-172,-122,-56,-59,-24,-204,-86,-65,-152,-119,-201,-75,-16,-106,-159,-152,-77,-29,-9,-39,-49,-141,-211,-23,-145,-96,-94,-84,-99,-66,-9,-135,-185,-15,-184,-123,-152,-94,-67,-43,-127,-3,-21,-11,-76,-129,-139,-65,-185,-15,-215,-163,-232,-1,-173,-81,-148,-12,1,-251,-183,-214,-162,-213,-247,-165,-232,-107,-75,-190,-205,-138,-149,-232,-99,-57,-148,-231,-188,-141,-193,-39,-208,-245,-102,-247,-1,-76,-13,-20,-263,-146,-158,-81,-270,-162,-70,-215,-286,-98,-186,-184,-147,-146,-160,-172,-42,-48,-14,-175,-299,-293,-214,-198,-128,-272,-108,-94,-102,-108,-53,2,-172,-41,-293,-14,-256,-92,-121,-140,-294,-54,-121,-221,-145,-260,-298,-82,-284,-238,-15,-159,-159,-213,-31,-44,-61,-203,-247,-39,-157,-130,-347,-272,-23,-185,-162,-337,-91,-72,-91,-315,-144,-165,-360,-173,-258,-275,-99,-81,-16,-72,-150,-238,-45,-7,-344,-364,-339,-54,-61,-24,-324,-321,-294,-104,-87,-165,-113,-4,-306,-198,-147,-136,-360,-217,-20,-391,-169,-209,-12,-95,-164,-215,-239,-87,-341,-241,-340,-343,-372,-305,-252,-398,-208,-284,-28,-11,-222,-360,-190,-9,-233,-68,-14,-220,-34,-87,-392,-84,-41,-187,-59,-247,-258,-143,-102,-208,-182,-254,-67,-182,-279,-339,-200,-445,-43,-120,-418,-273,-201,-113,-394,-4,-197,-313,-116,-62,-323,-47,-14,-24,-416,-150,-28,-288,-461,0,-388,-375,-424,-302,-4,-75,-54,-288,-212,-436,-414,-447,-362,-120,-467,-135,-93,-268,-8,-192,-342,-466,-162,-387,-348,-351,-236,-123,-51,-225,-259,-52,-14,-26,-347,-327,-206,-37,-77,-316,-278,-195,-348,-330,-235,-125,-36,-323,-10,-77,-133,-353,-109,-51,-134,-281,-227,-483,-406,-11,-356,-443,-104,-264,-90,-489,-39,-145,-318,-399,-238,-434,-145,-122,-507,-196,-156,-251,-370,-207,-534,-171,-117,-416,-226,-393,-133,-391,-347,-510,-121,-84,2,-110,-427,-456,-184,-295,-337,-444,-143,-120,-163,-351,-36,-483,-315,-240,-462,-367,-237,-277,-102,-426,-250,-240,-503,-567,-324,-555,-14,-197,-24,-371,-484,-54,-13,-432,-343,-54,-450,-374,-28,-154,-216,-314,-122,-281,-495,-351,-365,-528,-545,-429,-411,-93,-230,-170,-188,-227,-499,-562,-275,-412,-597,-64,-303,-374,-262,-359,-549,-579,-379,-143,-598,-273,-618,-449,-425,-441,-251,-135,-150,-521,-561,-460,-79,-252,-336,-27,-331,-335,-46,-555,-121,-447,-563,-617,-42,-125,-92,-472,-41,-164,-450,-372,-584,-327,-278,-307,-378,-513,-52,-55,-551,-81,-550,-472,-347,-664,-348,-150,-88,-7,-559,-475,-553,-342,-20,-411,-574,-419,-363,-176,-379,-429,-548,-649,-178,-449,-594,-536,-386,-108,-552,-179,-578,-398,-281,-3,-93,-706,-679,-623,-140,-682,-59,-710,-416,-390,-217,-679,-540,-85,-31,-403,-28,-15,-105,-388,-571,-103,-136,-404,-555,-667,-189,-460,-433,-278,-310,-300,-393,-383,-203,-632,-482,-371,-385,-265,-197,-100,-512,-668,-291,-626,-384,-40,-21,-411,-288,-187,-56,-556,-455,-114,-560,-205,-22,-442,-38,-260,-492,-276,-621,-202,-183,-5,-345,-25,-500,-633,-476,-47,-778,-726,-628,-308,-715,-705,-247,-670,-699,-136,-521,-311,-773,-333,-721,-77,-76,-197,-101,-31,-6,-701,-640,-678,-421,-778,-627,-359,-789,-463,-99,-557,-796,-12,-678,-591,-359,-711,-175,-82,-18,-347,-601,-819,0,-40,-32,-454,-680,-783,-269,-744,-726,-336,-563,-152,-782,-651,-674,-788,-311,-640,-525,-54,-317,-312,-328,-128,-162,-133,-769,-669,-611,-553,-247,-174,-217,-497,-202,-450,-486,-102,-35,-273,-436,-282,-343,-544,-602,-171,-444,-865,-206,-486,-5,-566,-444,-496,-142,-502,-9,-359,-330,-797,-735,-726,-66,-290,-716,-494,-796,-373,-519,-502,-78,-622,-602,-408,-511,-114,-330,-794,-102,-795,-882,-264,-771,-832,-729,-527,-264,-4,-12,-517,-516,-85,-899,-693,-759,-367,-844,-377,-207,-590,-551,-93,-810,-449,-464,-111,-161,-154,-823,-60,-523,-265,-219,-903,-170,-601,-785,-144,-439,-190,-275,-72,-75,-175,-137,-842,-336,-169,-245,-480,-751,-363,-610,-505,-771,-85,-337,-307,-687,-731,-118,-313,-541,-490,-485,-647,-104,-101,-324,-57,-5,-610,-251,-841,-97,-562,-664,-765,-969,-449,-172,-846,-465,-212,-600,-62,-399,-923,-62,-400,-197,-144,-699,-730,-754,-748,-405,-518,-633,-893,-675,-717,-380,-464,-193,-590,-888,-64,-111,-905,-774,-209,-492,-64,-589,-952,-59,-5,-615,-208,-131,-867,-594,-668,-253,-75,-418,-5,-394,-456,-266,-669,-335,-687,-661,-73,-446,-828,-413,-643,-410,-91,-25,-84,-335,-943,-355,-155,-778,-1013,-772,-976,-305,-575,-1060,-148,-931,-588,-204,-56,-102,-467,-937,-481,-890,-503,-379,-442,-774,-316,-732)

    val peter = listOf(2,2,1,2,-2,2,1,1,-4,-2,1,-3,-9,2,0,1,-8,-9,-12,2,-5,-8,0,-11,-3,-1,2,-20,-21,-18,-25,-25,-16,-18,-27,-25,-17,-13,-9,-35,-25,-1,-20,-22,-11,-3,-26,-32,-33,-21,-3,-42,-4,-48,-36,-15,-20,-29,-32,-12,-53,-32,0,-4,-2,-32,-55,-49,-23,-18,-34,-39,-70,-4,-64,-58,-66,-59,1,-36,-19,-38,-55,-25,-15,-65,-66,-65,-58,-53,-54,-18,-24,-79,-10,-73,-90,-11,-94,-79,-64,-74,-41,-85,-66,-38,-84,-46,-101,-38,-33,-107,-38,-70,-101,-7,-37,-94,1,-69,-42,-71,-15,-36,-70,-76,-42,-118,-39,-97,-27,-30,-6,-70,-23,-113,-103,-89,-35,-43,-11,-97,-137,-19,-6,-21,-107,-93,-50,-107,-46,-90,-51,-115,-134,-122,-88,-122,-74,-30,-10,-53,-12,-152,-68,-110,-123,-111,-40,-164,-10,-168,-38,-71,-67,-171,-146,1,-33,-13,-168,-106,-135,-145,-163,-125,-12,-156,-172,-69,0,-15,-137,-1,-21,0,-76,-48,-31,-86,-140,-9,-179,-45,-106,-85,-131,-180,-190,-3,-7,-89,-44,-106,-40,-171,-59,-214,-158,-160,-89,-59,-13,0,-215,-110,-204,-39,-171,-44,-173,-112,-153,-155,-85,-113,-226,-74,-104,-152,-5,-187,-171,-12,-165,-190,-152,-49,-177,-179,-123,-158,-131,-244,-143,-127,-124,-125,-170,-211,-201,-97,-33,-47,-243,-136,-243,-89,-192,-217,-105,-116,-268,-40,-154,-262,-223,-96,-20,-66,-239,-42,-24,-112,-162,-227,-52,-81,-80,-3,-33,-152,-33,-168,-48,-245,-87,-74,-139,-295,-17,-73,-180,-48,-182,-162,-59,-296,-37,-241,-67,-83,-218,-124,-136,-303,-38,-85,-205,-137,-14,-248,-13,-212,-266,-304,-294,-54,-145,-22,-312,-298,-23,-5,-126,-307,-190,-294,-43,-293,-339,-129,-223,-231,-59,-104,-60,-239,-11,-291,-242,-115,-117,-89,-7,-57,-280,-70,-70,-6,-35,-124,-253,-120,-322,-45,-187,-288,-237,-76,-192,-179,-269,-14,-269,-227,-374,-84,-15,-144,-266,-256,-162,-336,-266,-31,-367,-172,-156,-157,-220,-189,-152,-336,-253,-36,-324,-222,-175,-313,-289,-65,-123,-229,-204,-44,-72,-20,-78,-43,-226,-93,-399,-10,-150,-153,-221,-7,-302,-237,-288,-172,-233,-119,-247,-33,-170,-46,-424,-403,-40,-65,-116,-372,-148,-336,-287,-431,-134,-354,-14,-162,-228,-152,-119,-240,-356,-305,-15,-77,-303,-189,-205,-380,-175,-316,-396,-44,-42,-142,-363,-418,-313,-322,-307,-363,-454,-157,-308,-361,-398,-347,-249,-57,-453,-167,-194,-29,-443,-45,-359,-445,-89,-136,-60,-446,-97,-282,-298,-245,-91,-130,-423,-387,-492,-282,-415,-64,-294,-468,-251,-323,-210,-490,-142,-121,-393,-251,-265,-268,-135,-224,-116,-7,-27,-165,-265,-352,-226,-25,-327,-490,-493,-80,-501,-522,-436,-36,-464,-47,-349,-91,-460,-167,-436,-207,-41,-386,-461,-430,-412,-161,-460,-488,-207,-221,-17,-265,-115,-36,-499,-111,-518,-390,-526,-280,-150,-405,-458,-503,-527,-303,-383,-154,-317,-64,-379,-564,-385,-490,-524,-440,-69,-317,-377,-53,-503,-136,-71,-190,-19,-238,-572,-281,-294,-538,-146,-130,-406,-236,-223,-234,-16,-436,-391,-249,-508,-153,-41,-380,-229,-489,-466,-94,-596,-96,-544,-532,-106,-349,-34,-162,-6,-495,-287,-82,-307,-466,-358,-272,-282,-220,-84,-168,-124,-271,-307,-164,-627,-442,-348,-368,-548,-574,-248,-144,-516,-369,-319,-215,-476,-191,-326,-462,-286,-565,-395,-190,-353,-180,-88,-403,-520,-203,-268,-198,-374,-636,-565,-76,-447,-118,-658,-311,-468,-214,-215,-68,-370,-179,-286,-394,-532,-493,-339,-471,-344,-274,-512,-90,-306,-222,-348,-331,-670,-73,-136,-358,-518,-521,-41,-204,-476,-582,-633,-44,-133,-410,-658,-443,-158,-76,-162,-509,-150,-304,-407,-210,-667,-279,-109,-469,-680,-702,-101,-159,-197,-134,-154,-270,-90,-568,-237,-95,-328,-23,-493,-310,-649,-283,-31,-234,-126,-244,-312,-409,-84,-522,-72,-458,-190,-707,-338,-433,-709,-81,-693,-367,-302,-260,-322,-282,-379,-401,-60,-126,-645,-573,-91,-685,-312,-165,-217,-594,-386,-357,-72,-426,-354,-246,-278,-451,-37,-484,-232,-638,-569,-376,-278,-554,-666,-191,-513,-564,-502,-640,-531,-1,-667,-146,-20,-375,-771,-263,-754,-182,-190,-626,-249,-418,-278,-722,-676,-161,-666,-462,-488,-70,-569,-779,-642,-121,-556,-146,-531,-323,-116,-100,-76,-260,-339,-743,-44,-811,-137,-456,-462,-469,-500,-650,-681,-424,-336,-445,-172,-604,-776,-133,-829,-72,-88,-219,-247,-269,-205,-532,-222,-232,-201,-762,-105,-478,-263,-177,-475,-584,-439,-316,-722,-371,-35,-132,-417,-385,-695,-76,-452,-201,-848,-359,-731,-721,-211,-698,-502,-113,-271,-31,-66,-588,-794,-189,-417,-715,-96,-95,-691,-587,-193,-788,-445,-761,-347,-696,-34,-14,-358,-633,-152,-140,-371,-795,-500,-477,-617,-83,-462,-338,-167,-345,-99,-806,-798,-447,-338,-263,-76,-382,-913,-577,-657,-69,-344,-853,-679,-204,-560,-238,-455,1,-1,-163,-536,-344,-386,-600,-915,-245,-717,-914,-192,-931,-31,-230,-42,-531,-122,-66,-347,-476,-3,-506,-396,-839,-365,-12,-453,-247,-448,-369,-661,-451,-175,-64,-805,-63,-597,-451,-350,-77,-958,-525,-194,-116,-398,-100,-687,-758,-162,-424,-920,-162,-577,-549,-250,-594,-853,-44,-34,-882,-656,-358,-425,-592,-257,-963,-295,-561,-970,-885,-968,-112,-111,-734,-375,-825,-462,-333,-154,-490,-1004,-391,-925,-175,-299,-985,-432,-165,-721,-289,-817,-393,-831,-697,-599,-145,-977,-550,-577,-249,-743,-711,-4,-442,-252,-897,-130,-528,-906,-809,-228,-548,-695,-912,-676,-936,-209,-312,-951,-671,-898,-205,-730,-873,-798,-943)

    given("AoC Day 5 part 1") {

        it("should be correct for valid ref data") {
            assertEquals(5,  AoC_Day5.solvePt1(listOf(0,3,0,1,-3)))
        }

        it("should be correct for the task") {
            assertEquals(373160, AoC_Day5.solvePt1(task))
        }

    }

    given("AoC Day 5 part 2") {

        it("should be correct for valid ref data") {
            assertEquals(10,  AoC_Day5.solvePt2(listOf(0,3,0,1,-3)))
        }

        /*
        it("should be correct for the task functionally") {
            assertEquals(26395586, AoC_Day5.solvePt2(task))
        }
        */

        it("should be correct for the task imperatively") {
            assertEquals(26395586, AoC_Day5.solvePt2Imperative(task.toTypedArray()))
        }

    }


})